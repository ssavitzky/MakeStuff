### Test suite for music  -*-Makefile-*-

SUITE = music
TESTS = 

all::
	echo make targets for $(SUITE): run  = setup test teardown

.PHONY: run setup test teardown

run:: setup test teardown
	@echo running tests for $(SUITE).tests

TEST_DATA = music.data
TEST_DIRS = $(shell ls $(TEST_DATA))
LYRICS_DIRS = Lyrics Lyrics-1
TEST_DIR_CONTENTS = $(addsuffix /Makefile, $(TEST_DIRS))
TEST_FILES = $(TEST_DIR_CONTENTS)		 	\
		Lyrics/alphabet.flk Lyrics-1/alpha.flk

### Tests

test::
	@echo testing basic functionality in Lyrics
	cd Lyrics; make alphabet.pdf
	@echo Lyrics/alphabet.pdf should exist
	test -f Lyrics/alphabet.pdf

test::
	@echo testing report-vars in Lyrics, looking at hasLyrics and NAMES
	cd Lyrics; make report-vars > vars.log
	grep -qe 'hasLyrics=lyrics.make' Lyrics/vars.log
	grep -qe 'NAMES=alphabet tagged-wip' Lyrics/vars.log

test::
	@echo testing make all in Lyrics
	cd Lyrics; make
	@echo pdf files should exist
	@cd Lyrics; for f in *.flk; do g=`basename $$f .flk`;	\
		test -f  $$g.pdf || (echo $$g.html not found; false) 	\
	done

SONGS_EXPECTED_SUBDIRS = alphabet alpha beta
SONGS_REJECTED_SUBDIRS = work-in-progress tagged-work-in-progress
SONG_SUBDIR_FILES = index.html lyrics.html lyrics.pdf lyrics.cho \
		    lyrics.txt lyrics.chords.txt metadata.sh metadata.yml

test::
	@echo testing in Songs.
	cd Songs; make
	@echo song subdirs $(SONGS_EXPECTED_SUBDIRS) should exist
	@for d in $(add-prefix Songs/, $(SONGS_EXPECTED_SUBDIRS)); do		\
		test -d $$d || (echo $$d was not made; false) 			\
	done
	@echo song subdirs $(SONGS_REJECTED_SUBDIRS) should NOT exist
	@for d in $(add-prefix Songs/, $(SONGS_REJECTED_SUBDIRS)); do		\
		[ ! -d $$d ] || (echo $$d was made in error; false)		\
	done
	@echo song subdirs should contain lyrics.{pdf,html,cho,txt,chords.txt}
	@echo song subdirs should contain index.html, metadata.{sh,yml}
	@cd Songs; for d in *; do						\
		if test -d $$d; then for f in $(SONG_SUBDIR_FILES); do		\
			test -f $$d/$$f || (echo $$d/$$f missing; false); 	\
		done; fi;							\
	done

test::
	@echo making sure that alpha/index.html includes lyrics
	@grep -q 'include virtual="lyrics.html"' Songs/alpha/index.html 	\
		|| (echo alpha/index.html should include lyrics, but does not; false)
	@echo making sure that beta/index.html does not include lyrics
	@if grep -q 'include virtual="lyrics.html"' Songs/beta/index.html; then	\
	    echo beta/index.html should not include lyrics, but does; false; 	\
	else true; fi

# TODO:
#	test more tag handling:  PD, REJ, web-ok
#	look at the song index files
#	add some audio files
#	At some point we may want to make 1subdir-index.mustache if it doesn't exist
#	write a test song that actually uses _all_ of the FlkTeX macros

### Files needed for setup

#FIXME:  copy test lyrics from music.data/Lyrics;
#	need music.data/Songs/1subdir-index.mustache for Songs

%/alphabet.flk %/alpha.flk:
	cp ../TeX/alphabet.flk $@

%/song.sty: | %/Makefile
	cd `dirname $@`; make imports

%/Makefile:
	cd `dirname $@`; ln -s ../Makefile

### boilerplate

setup::
	@echo setting up $(SUITE).tests

setup:: | $(TEST_DIRS) $(TEST_FILES)
	echo $(TEST_FILES)

teardown::
	@echo tearing down $(SUITE).tests

teardown::
	rm -rf $(TEST_DIRS)

$(TEST_DIRS):
	[ ! -d $(TEST_DATA)/$@ ] || cp -a $(TEST_DATA)/$@ .

